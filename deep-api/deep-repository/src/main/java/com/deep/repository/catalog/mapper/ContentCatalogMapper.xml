<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.deep.repository.catalog.mapper.ContentCatalogMapper" >
  <resultMap id="BaseResultMap" type="com.deep.repository.catalog.entity.ContentCatalog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="profession_id" property="professionId" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="stage" property="stage" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="orders" property="orders" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="ContentCatalogDto" type="com.deep.repository.catalog.dto.ContentCatalogDto" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="profession_id" property="professionId" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="stage" property="stage" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, title, parent_id, profession_id, level, status, stage, type, create_time, orders
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from dp_content_catalog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from dp_content_catalog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.deep.repository.catalog.entity.ContentCatalog" >
    insert into dp_content_catalog (id, title, parent_id,
    profession_id, level, status,
    stage, type, create_time,
    orders)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER},
    #{professionId,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},
    #{stage,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT},
    #{orders,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.deep.repository.catalog.entity.ContentCatalog" >
    insert into dp_content_catalog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="professionId != null" >
        profession_id,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="stage != null" >
        stage,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="orders != null" >
        orders,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="professionId != null" >
        #{professionId,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="stage != null" >
        #{stage,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="orders != null" >
        #{orders,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.deep.repository.catalog.entity.ContentCatalog" >
    update dp_content_catalog
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="professionId != null" >
        profession_id = #{professionId,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="stage != null" >
        stage = #{stage,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="orders != null" >
        orders = #{orders,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deep.repository.catalog.entity.ContentCatalog" >
    update dp_content_catalog
    set title = #{title,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      profession_id = #{professionId,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      stage = #{stage,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      orders = #{orders,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectPrimaryCatalogByProfessionId" resultMap="ContentCatalogDto">
    select
    <include refid="Base_Column_List" />
    from dp_content_catalog
    where profession_id = #{professionId,jdbcType=INTEGER}
    and parent_id = -1
    order by orders asc
  </select>

  <select id="selectChildrenCatalogByParentId" resultMap="ContentCatalogDto">
    select
    <include refid="Base_Column_List" />
    FROM dp_content_catalog WHERE FIND_IN_SET(id,queryChildrenCatalogInfo(#{parentId}))
    order by orders asc
  </select>
</mapper>