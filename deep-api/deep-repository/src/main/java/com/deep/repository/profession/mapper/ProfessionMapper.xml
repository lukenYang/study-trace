<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.deep.repository.profession.mapper.ProfessionMapper" >
  <resultMap id="BaseResultMap" type="com.deep.repository.profession.entity.Profession" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="keywords" property="keywords" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="orders" property="orders" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="ProfessionDto" type="com.deep.repository.profession.dto.ProfessionDto" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="orders" property="orders" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, name, keywords, status, category_id, create_time, orders, type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dp_profession
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from dp_profession
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.deep.repository.profession.entity.Profession" >
    insert into dp_profession (id, name, keywords, 
      status, category_id, create_time, 
      orders, type)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{keywords,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, 
      #{orders,jdbcType=INTEGER}, #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.deep.repository.profession.entity.Profession" >
    insert into dp_profession
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="keywords != null" >
        keywords,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="orders != null" >
        orders,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null" >
        #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="orders != null" >
        #{orders,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.deep.repository.profession.entity.Profession" >
    update dp_profession
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null" >
        keywords = #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="orders != null" >
        orders = #{orders,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deep.repository.profession.entity.Profession" >
    update dp_profession
    set name = #{name,jdbcType=VARCHAR},
      keywords = #{keywords,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      category_id = #{categoryId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      orders = #{orders,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getProfessionByCategoryId" resultMap="ProfessionDto" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from dp_profession
    where category_id = #{categoryId,jdbcType=INTEGER}
    order by orders asc
  </select>
</mapper>